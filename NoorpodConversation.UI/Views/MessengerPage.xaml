<UserControl x:Class="NoorpodConversation.UI.Views.MessengerPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NoorpodConversation.UI.Views"
             xmlns:vm="clr-namespace:NoorpodConversation.ViewModels.Views;assembly=NoorpodConversation.ViewModels"
             xmlns:conv="clr-namespace:NoorpodConversation.ViewModels.Converters;assembly=NoorpodConversation.ViewModels"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="700" FlowDirection="RightToLeft" Background="White" FontFamily="tahoma">
    <UserControl.Resources>
        <vm:MessengerPageViewModel x:Key="MessengerPageViewModel"/>
        <conv:PersianDateTimeConverter x:Key="PersianDateTimeConverter" IsShowYear="True" IsShowTime="True"/>
    </UserControl.Resources>
    <UserControl.DataContext>
        <Binding Source="{StaticResource MessengerPageViewModel}"/>
    </UserControl.DataContext>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="3.5*"/>
        </Grid.ColumnDefinitions>
        <!--<Grid.Resources>
            <CollectionViewSource x:Key="SortedItems" Source="{Binding }">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="IsHandUp" Direction="Ascending"/>
                    <scm:SortDescription PropertyName="HandDateTime" Direction="Ascending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </Grid.Resources>-->
        <Border Grid.ColumnSpan="2" BorderThickness="0" BorderBrush="#FFB4B4B4" CornerRadius="4" Margin="0,0,0,5">
            <StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="http://noorpods.com مرکز پاسخگویی به سوالات تورات، انجیل و قرآن" Margin="0,0,10,10" HorizontalAlignment="Center" Cursor="Hand" Foreground="Blue" MouseLeftButtonUp="TextBlock_MouseLeftButtonUp"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="موضوع:" Margin="0,0,10,10"/>
                    <TextBlock Text="{Binding RoomSubject}" FontWeight="Bold" Foreground="Green" TextWrapping="Wrap"/>
                </StackPanel>
                <Grid>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="تعداد کاربران:  " VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding Users.Count}"  VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock Visibility="{Binding IsAdmin,Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRoomOpenned}" Value="True">
                                            <Setter Property="Text" Value="اتاق باز است"/>
                                            <Setter Property="Foreground" Value="Green"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsRoomOpenned}" Value="False">
                                            <Setter Property="Text" Value="اتاق بسته است"/>
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Button x:Name="roomManagement" Content="مدیریت اتاق"  Visibility="{Binding IsAdmin,Converter={StaticResource BoolToVisibilityConverter}}" Padding="10,0,10,0" Margin="10,0,10,0" Click="roomManagement_Click"/>
                        <CheckBox x:Name="chkNotification" VerticalAlignment="Center" Click="chkNotification_Click" Unchecked="chkNotification_Click" FlowDirection="LeftToRight" IsChecked="True"  Content="نمایش پیغام زمانی که پنجره در دسترس نیست"/>

                    </StackPanel>
                </Grid>
            </StackPanel>
        </Border>
        <Border Grid.Row="1" BorderThickness="1" BorderBrush="#FFB4B4B4" CornerRadius="4">
            <ListBox  BorderThickness="0" ItemsSource="{Binding Users}" Margin="2">
                <ListBox.Resources>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="MaxWidth" Value="{Binding RelativeSource={RelativeSource AncestorType=ListBox ,Mode=FindAncestor}, Path=ActualWidth}"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border x:Name="Border" Background="#01ffffff">
                                        <Border.Resources>
                                            <ContextMenu x:Key="cm">
                                                <MenuItem Header="دسترسی دادن">
                                                    <MenuItem Header="دسترسی پیام" Command="{Binding AllowMessagePermissionCommand,Source={StaticResource MessengerPageViewModel}}" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="دسترسی میکروفن" Command="{Binding AllowMicrophonePermissionCommand,Source={StaticResource MessengerPageViewModel}}" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="اجازه ی ورود" Command="{Binding AllowLoginPermissionCommand,Source={StaticResource MessengerPageViewModel}}" CommandParameter="{Binding}"/>
                                                </MenuItem>
                                                <MenuItem Header="دسترسی گرفتن">
                                                    <MenuItem Header="دسترسی پیام" Command="{Binding DenyMessagePermissionCommand,Source={StaticResource MessengerPageViewModel}}" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="دسترسی میکروفن" Command="{Binding DenyMicrophonePermissionCommand,Source={StaticResource MessengerPageViewModel}}" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="اخراج برای همیشه" Command="{Binding DenyLoginPermissionCommand,Source={StaticResource MessengerPageViewModel}}" CommandParameter="{Binding}"/>
                                                </MenuItem>
                                                <MenuItem Header="تغییر دسترسی ادمین" Command="{Binding ChangeUserAdminCommand,Source={StaticResource MessengerPageViewModel}}" CommandParameter="{Binding}"/>
                                                <!--<MenuItem Header="اجازه ی صحبت کردن" Command="{Binding SetDefaultMicrophoneCommand,Source={StaticResource MessengerPageViewModel}}" CommandParameter="{Binding}"/>-->
                                            </ContextMenu>
                                        </Border.Resources>
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="ContextMenu" Value="{StaticResource cm}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsAdmin,Source={StaticResource MessengerPageViewModel}}" Value="False">
                                                        <Setter Property="ContextMenu" Value="{x:Null}" />
                                                    </DataTrigger>
                                                    <!--<DataTrigger Binding="{Binding IsAdmin,Source={StaticResource MessengerPageViewModel}}" Value="true">
                                                        <Setter Property="ContextMenu" >
                                                            <Setter.Value>
                                                                
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>-->
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Grid Margin="10">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentControl x:Name="userIcon" Width="32" Height="32"/>
                                            <ContentControl x:Name="handIcon" Template="{DynamicResource HandUp_TemplateStyle}" Foreground="#FF31AA2B" Width="32" Height="32"/>
                                            <StackPanel Grid.Column="1" VerticalAlignment="Center" CanHorizontallyScroll="False">
                                                <TextBlock x:Name="txtName" Margin="10,0,0,0" Text="{Binding UserName}"/>
                                                <StackPanel Margin="0,5,0,0"  Orientation="Horizontal">
                                                    <Grid>
                                                        <ContentControl x:Name="micIcon" Template="{DynamicResource Microphone_TemplateStyle}" Width="16" Height="16" Foreground="Gray"/>
                                                        <ContentControl x:Name="banMic" Template="{DynamicResource Ban_TemplateStyle}" Width="10" Height="10" VerticalAlignment="Bottom" Foreground="red"/>
                                                    </Grid>
                                                    <Grid>
                                                        <ContentControl x:Name="mailIcon" Template="{DynamicResource Mail_TemplateStyle}" Margin="5,0,0,0" Width="16" Height="16" Foreground="Gray"/>
                                                        <ContentControl x:Name="baMail" Template="{DynamicResource Ban_TemplateStyle}" Width="10" Height="10" VerticalAlignment="Bottom" Foreground="red"/>
                                                    </Grid>
                                                </StackPanel>
                                            </StackPanel>
                                            <Grid Grid.Column="2">
                                                <ContentControl x:Name="ctrlTalking" Foreground="#146dc9" Template="{DynamicResource Talking_TemplateStyle}" Width="24" Height="24" VerticalAlignment="Center" FlowDirection="LeftToRight"/>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger >
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="false"/>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Border" Property="Background" Value="#f5f5f5"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#FF87BEC7"/>
                                            <Setter TargetName="txtName" Property="Foreground" Value="white"/>
                                            <!--<Setter TargetName="txtUsername" Property="Foreground" Value="white"/>
                                        <Setter TargetName="txtmsg" Property="Foreground" Value="white"/>-->
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsAdmin}" Value="True">
                                            <Setter TargetName="userIcon" Property="Template" Value="{DynamicResource AdminUser_TemplateStyle}"/>
                                            <Setter TargetName="userIcon" Property="Foreground" Value="#FF0E707A"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsAdmin}" Value="False">
                                            <Setter TargetName="userIcon" Property="Template" Value="{DynamicResource GuestUser_TemplateStyle}"/>
                                            <Setter TargetName="userIcon" Property="Foreground" Value="Gray"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsHandUp}" Value="True">
                                            <Setter TargetName="userIcon" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="handIcon" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsHandUp}" Value="False">
                                            <Setter TargetName="userIcon" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="handIcon" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsBanMic,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter TargetName="banMic" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="micIcon" Property="Opacity" Value="0.5"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsBanMic,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter TargetName="banMic" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="micIcon" Property="Opacity" Value="1"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding IsBanMail,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter TargetName="baMail" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="mailIcon" Property="Opacity" Value="0.5"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsBanMail,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter TargetName="baMail" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="mailIcon" Property="Opacity" Value="1"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsTalking,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter TargetName="ctrlTalking" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsTalking,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter TargetName="ctrlTalking" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <!--<DataTrigger Binding="{Binding IsNotificationOff}" Value="False">
                                            <Setter TargetName="borderCount" Property="Background" Value="#6fc766"/>
                                        </DataTrigger>-->
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.Resources>
            </ListBox>
        </Border>

        <Border  Grid.Row="1" Grid.Column="1" BorderThickness="1" Margin="5,0,0,0" BorderBrush="#FFB4B4B4" Background="#FFF1F1F1" CornerRadius="4">
            <ListBox x:Name="lstMessage" FlowDirection="LeftToRight" Margin="2,2,2,2" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0" ItemsSource="{Binding Messages}" Background="Transparent">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel FlowDirection="RightToLeft" VerticalAlignment="Bottom" Margin="5, 10, 5, 5"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.Resources>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Margin" Value="10,2,10,2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Grid Background="#01ffffff">
                                        <Grid.Resources>
                                            <ContextMenu x:Key="cm">
                                                <MenuItem Header="حذف پیام" Command="{Binding DeleteMessageCommand,Source={StaticResource MessengerPageViewModel}}" CommandParameter="{Binding}"/>
                                            </ContextMenu>
                                        </Grid.Resources>
                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Setter Property="ContextMenu" Value="{StaticResource cm}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsAdmin,Source={StaticResource MessengerPageViewModel}}" Value="False">
                                                        <Setter Property="ContextMenu" Value="{x:Null}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <Border x:Name="Border" CornerRadius="3" Background="#ffffff">
                                            <StackPanel Orientation="Vertical" Margin="10" FlowDirection="LeftToRight">
                                                <TextBlock Name="message" FlowDirection="RightToLeft" TextWrapping="WrapWithOverflow" Foreground="#FF3C3C3C">
                                                  <Run Text="{Binding Sender.UserName}" Foreground="#FF0E8AA6" FontStyle="Italic"/>
                                                  <Run Text="ا" Foreground="Transparent"/>
                                                  <Run Text=":"/>
                                                  <Run Text="{Binding Message}"/>
                                                </TextBlock>
                                                <TextBlock x:Name="txtTime" Opacity="0.5" Grid.Row="1" Margin="0,0,0,0" Text="{Binding CreatedDateTime,Converter={StaticResource PersianDateTimeConverter}}"  Grid.Column="1" HorizontalAlignment="Right"/>
                                            </StackPanel>
                                        </Border>
                                        <Border x:Name="LogBorder" CornerRadius="5" Visibility="Collapsed" Background="#ffffff">
                                            <TextBlock Margin="5" x:Name="txtUserSign" Opacity="0.7" Grid.Row="1"  FlowDirection="RightToLeft" HorizontalAlignment="Right">
                                                <Run Text="کاربر "/>
                                                <Run Text="{Binding Sender.UserName}" Foreground="#FFFFF971"/>
                                                <Run Text="{Binding Message}"/>
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsCurrentUserMessage}" Value="True">
                                            <Setter Property="HorizontalAlignment" Value="Right"/>
                                            <Setter TargetName="Border" Property="Background" Value="#FFA2D3A2"/>
                                            <Setter TargetName="txtTime" Property="Foreground" Value="#FFF1F1F1"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsCurrentUserMessage}" Value="False">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter TargetName="txtTime" Property="Foreground" Value="#FFE0E0E0"/>
                                            <Setter TargetName="Border" Property="Background" Value="#FFABBAC7"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsLoginMessage}" Value="True">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter TargetName="LogBorder" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="LogBorder" Property="Background" Value="#FF5FA557"/>
                                            <Setter TargetName="Border" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsLogoutMessage}" Value="True">
                                            <Setter TargetName="LogBorder" Property="Visibility" Value="Visible"/>
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter TargetName="Border" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="LogBorder" Property="Background" Value="#9E5555"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.Resources>
            </ListBox>
        </Border>

        <Grid Grid.Row="2" Grid.Column="1" Margin="5,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="txtMessage" IsEnabled="{Binding IsAccessMessage}" Text="{Binding Message,UpdateSourceTrigger=PropertyChanged}" KeyDown="TextBox_KeyDown" PreviewKeyDown="TextBox_PreviewKeyDown" AcceptsReturn="True" Height="60" VerticalContentAlignment="Top" TextWrapping="Wrap" Margin="0,6,0,1">

            </TextBox>
            <Button x:Name="btnSendMessage" Command="{Binding SendMessageCommand}" Height="auto" VerticalAlignment="Stretch" Grid.Column="1" Content="ارسال" Margin="10,10,0,10" Width="100"/>
        </Grid>
        <Border Margin="0,5,0,0" Grid.Row="2" BorderThickness="1" BorderBrush="#FFB4B4B4" CornerRadius="4">
            <StackPanel Orientation="Horizontal" FlowDirection="LeftToRight" Margin="10" HorizontalAlignment="Left">
                <Grid>
                    <TextBlock TextWrapping="Wrap" Width="50" FlowDirection="RightToLeft" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsTalking}" Value="True">
                                        <Setter Property="Text" Value="میکروفن روشن"/>
                                        <Setter Property="Foreground" Value="Green"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsTalking}" Value="False">
                                        <Setter Property="Text" Value="میکروفن خاموش"/>
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Button x:Name="btnMicrophone" Command="{Binding TalkCommand}" Content="{DynamicResource Microphone_TemplateStyle}" Style="{DynamicResource IconToolbarButtonStyle}" Background="#FF444444" Padding="5"/>
                <Button x:Name="btnHand" Command="{Binding HandUpCommand}" Background="#FF444444" Padding="5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource IconToolbarButtonStyle}">
                            <Setter Property="Content" Value="{DynamicResource HandUp_TemplateStyle}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsHandUp}" Value="True">
                                    <Setter Property="Content" Value="{DynamicResource HandDown_TemplateStyle}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
